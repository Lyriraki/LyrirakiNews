package com.lyriraki.lyrirakinews.helper

import com.lyriraki.lyrirakinews.R
import com.lyriraki.lyrirakinews.model.News

object NewsData {
    private val newsJudul = arrayOf(
        "Kenapa Flutter Layak Kamu Pelajari: 3 Alasan",
        "Kenapa Anak Sosial Hijrah Belajar Kotlin Android: 3 Alasan.",
        "Programmer Atau Pro Gamer, Kamu Team Mana?",
        "Algoritma Dulu Ngoding Kemudian, Programmer Jangan Grasa Grusu",
        "Langkah Awal Untuk Memulai Belajar Pemrograman Web",
        "Developer yang Tangguh Belajar Pemrograman, Tak Kenal Rintangan",
        "3 Tips Agar Kamu Keterima Kerja di Dicoding",
        "Ngoding Dibawa Asik Aja!",
        "Cepat Menguasai Bahasa Pemrograman Dengan Teknik Feynman",
        "Dari Mana Memulai Belajar Coding?"
    )

    private val newsAuthor = arrayOf(
        "Alfian Yusuf Abdullah",
        "Dimas Catur Wibowo",
        "Zidni Sika Azkia",
        "Zidni Sika Azkia",
        "Zidni Sika Azkia",
        "Mutiara Arumsari",
        "Aditya Tri Nugroho",
        "Dicoding Intern",
        "Dicoding Intern",
        "Dicoding Intern"
    )

    private val newsDesc = arrayOf(
        "1. Cross platform\nFlutter mendukung cross platform alias dapat dijalankan di beberapa platform yang berbeda. Dengan menggunakan Flutter, kita dapat membuat aplikasi Android dan iOS sekaligus. Selain mobile, kita juga dapat membuat aplikasi web dan desktop. Tentunya hal ini akan menghemat waktu. Kita tidak perlu mempelajari bahasa native yang digunakan di masing-masing platform.\n2.Fast development (Hot reload)\nFlutter memiliki sebuah fitur bernama hot reload. Dengan fitur ini, proses pengembangan aplikasi dapat berjalan lebih cepat dan mudah.. Setelah melakukan perubahan pada kode program, cukup tekan hot reload. Aplikasi akan diperbarui dalam kurun waktu kurang dari 1 detik. Sangat cepat bukan?\n3. Beautiful UI\nFlutter dirancang untuk mempermudah developer dalam membangun tampilan user interface. Keseluruhan UI pada Flutter dibangun menggunakan widget. Sebagai contoh, jika kita menambahkan sebuah text field, text field tersebut adalah widget. Button dan Image juga merupakan widget. Bahkan untuk mengatur posisi komponen menjadi rata tengah, kita menggunakan center widget. Kita dapat melakukan kustomisasi pada tiap widget. Widget akan menggambarkan seperti apa tampilan yang akan dibuat berdasarkan konfigurasi dan state yang ada.",
        "Apa Itu Kotlin?\nNah sedikit membahas sejarahnya, jadi pada tahun 2010 JetBrains memulai proyek open sources yaitu sebuah bahasa pemrograman dengan pengetikan statis yang berjalan pada JVM ataupun menggunakan kompiler LLVM yang bisa juga dikompilasikan ke dalam bentuk kode sumber JavaScript. \nLalu kenapa JetBrains menamakannya dengan Kotlin? ini karena Kotlin merupakan sebuah pulau yang berada ditempat yang sama dengan markas Jetbrains. Yaitu di Saint Petersburg, Rusia. Dirilis pada bulan Februari 2016 dengan versi 1.0 dan saat ini sudah mencapai versi 1.3.70.",
        "Hallo gamer Indonesia! Tahukah kalian kalau industri game sekarang sedang berkembang pesat di Indonesia. Yaaa.. dilihat peminat game dari segala bidang entah pendidikan, ekonomi, dan sebagainya. Baik dari game 2D, 3D, atau bahkan AR/VR. Nah, aku mau tanya kalian team mana Programmer atau Pro Gamer? Programmer yang artinya developer yang mengembangkan aplikasi entah apps/web/game atau Pro Gamer bagi mereka yang jago game sampe ke akar-akarnya. Wah… pilih mana nih…\nWahai para gamer, perlu diketahui ada banyak keuntungan yang kalian bisa dapatkan jika menjadi developer game atau yang menciptakan game. Tapi tak salah juga jika kalian benar-benar menekuni bermain game. Oke, jangan terlalu bertele-tele, di sini bakal aku bahas benefit yang didapat oleh programmer game dan pro gamer.",
        "Artikel kali ini aku akan bahas algoritma dulu ngoding kemudian karena kebanyakan programmer pemula ketika belajar ngoding, hal yang paling utama adalah bisa memunculkan “Hello World”. Waktu itu aku mencobanya di Borland C++. Sekarang masih dipake ngga ya di sekolah?\nBisa kalian bayangkan aku yang biasa berkecimpung dengan warna, hari itu harus berkenalan dengan si hitam putih. Betapa kagetnya waktu itu aku, kaya keluar dari kandang buaya masuk ke kandang macan.\nDengan berjalannya waktu, aku pun belajar melalui tutorial dari youtube dan artikel tentang pemograman C++. Tidak ada yang error, ya iyalah wong jiplak hehe… dan aku pun bisa hafal dengan script yang aku cari di internet.\nNah, pada suatu ujian tengah semester, aku dihadapkan soal yang harus praktek di komputer kampus. Aku sungguh bingung waktu itu karena script-nya error melulu. Hingga aku ada pada titik kepasrahan.\nDari pengalaman tersebut aku menyimpulkan beberapa hal tentang urutan belajar ngoding yang sebenarnya. Jadi, jangan asal nyemplung, tur ojo grasa grusu rek…",
        "Menjadi orang awam dalam bidang web bukanlah hal yang memalukan jika ada keinginan belajar dan berkembang. Ada banyak langkah awal untuk memulai belajar pemrograman web mulai dari belajar otodidak, kuliah, kursus, atau belajar online di website yang berbayar ataupun gratis.\nTuntutan industri yang serba online membuat kita untuk berlomba lomba belajar bahasa pemrograman terutama web sehingga banyak yang terjun langsung ke dalam jurang coding dengan memimpikan indahnya mempunyai startup besar seperti Tokopedia dan GoJek yang levelnya unicorn. Bahkan dengan mudahnya dapat memimpikan seorang investor yang siap bergabung dengan startup yang kita buat.\nTapi pernahkah kalian berfikir mulai dari mana harus belajar? Oke kita akan bahas dalam artikel ini, ada beberapa langkah awal untuk memulai belajar pemrograman web.",
        "Awali Belajar Pemrograman dengan Menulis Script di Buku\nBersekolah di SMKN 1 Kedawung dulu, Ahmad mulai belajar pemrograman. Tak punya laptop pun jadi. Ia latihan menulis script di buku tulisnya. Selain fasilitas, akses internet pun terbatas. Di luar jam sekolah ia sulit  mendapatkan sumber belajar. Fasilitas warnet dan jaringan internet di kampungnya, sangat terbatas.\nTahu hobi putranya di dunia IT, sang Ayah berjuang hadiahkan sebuah laptop. Meski speknya minimalis, Ahmad memanfaatkannya semaksimal mungkin untuk belajar.  Awalnya suka belajar web, ia mengunduh semua stack yang ia butuhkan terkait materi web dan html dengan bantuan wifi di sekolah. Di rumah ia lanjut mempraktikkannya. Dengan Lenovo G40-45 berprosesor AMD E1-6010 dan RAM 2GB ia belajar sedikit sedikit mengenai Web Programming (HTML, CSS, JavaScript, PHP), Photoshop CS3, dan Borland C++\nDipercaya Sekolah Membuat Aplikasi\nDengan skill belajar otodidak yang terus bertambah, Ahmad mendapat kepercayaan baru dari pihak sekolah. Ia diminta membuat sistem aplikasi pendaftaran murid baru, dan berhasil! Sistem besutannya benar-benar dimanfaatkan sekolah dalam mendata para murid SMK tahun ajaran baru, \nDi sekolah Ahmad memang termasuk siswa cemerlang.  Ia sempat menjadi juara 2 Lomba Kompetensi Siswa (LKS) di tingkat Kabupaten Cirebon tahun 2016 kategori “Web Design.” LKS merupakan lomba antar siswa SMK sesuai bidang keahlian. Diadakan setiap tahun, LKS setara dengan Olimpiade Sains Nasional bagi",
        "1. Lulus kelas academy di Dicoding\nSaat ini Dicoding sudah memiliki Learning Path Academy sehingga kita dapat belajar secara terstruktur untuk mencapai target yang kita inginkan. Saya sendiri bertekad untuk menjadi seorang Android Developer yang andal. Kelas Android Pemula merupakan kelas pertama yang saya pelajari di Dicoding. Bagaimana jika belum memiliki konsep Pemrograman Berorientasi Objek (PBO)? Teman-teman dapat mengambil terlebih dahulu kelas Memulai Pemrograman dengan Java atau Memulai Pemrograman dengan Kotlin ya.\n2. Ikut program yang diadakan oleh Dicoding\nPada bulan Mei 2019, Dicoding resmi membuka pendaftaran untuk program Google Developers Kejar (GDK) 2019. GDK bertujuan untuk mengasah kemampuan developer di Indonesia dalam mengembangkan aplikasi Mobile Android Native. Ini merupakan kali kedua Dicoding dipercaya untuk mengadakan Google Developers Kejar, setelah di tahun sebelumnya ribuan peserta telah mendapatkan pelatihan via program ini.\n3. Miliki sertifikasi\nTips terakhir untuk dapat dilirik kerja di Dicoding adalah memiliki sertifikasi. Sertifikasi, salah satu syarat yang wajib terpenuhi jika kita ingin bekerja di Dicoding. Sebagai Android Developer, terdapat sertifikasi yang bisa kita ikuti yaitu sertifikasi Associate Android Developer (AAD). Sertifikasi AAD merupakan salah satu program sertifikasi yang dimiliki Google untuk memvalidasi skill dan kompetensi kita di dalam pemrograman Android. Per Februari 2020, terdapat sebanyak 1627 lulusan AAD di seluruh dunia dan 160 di antaranya berasal dari Indonesia.",
        "1. Anggap Ngoding Itu Sebuah Game\nWaktu kecil dulu kalau kamu main game kelamaan, pasti orang tua kamu bilang “Giliran main game kuat berjam-jam, giliran belajar sebentar susah”. Padahal kalo kamu tau, ngoding itu sama aja kayak main game. Bila diibaratkan dengan game, ngoding itu seperti menyelesaikan puzzle. Dengan ngoding kamu gak hanya belajar mengasah logika, tapi juga kreativitas, kemampuan menyelesaikan masalah, ketelitian, sama seperti apa yang kamu dapat ketika bermain game. Jika kamu bisa anggap ngoding seperti main game, kamu bisa kuat tahan sampai berjam-jam.\n2. Kepuasan Ngoding\nCoba kita lihat orang-orang di sekitar kita dan juga diri kita. Jika kita mendapatkan sesuatu dengan usaha kita, pasti ada kepuasan diri yang kita dapat. Contoh lain, di game pun memakai sistem itu, ada yang namanya achievement. Kita tidak dapat apa-apa di sana tapi kita dapat kepuasan ketika kita menyelesaikan tantangan yang diberikan di dalam game tersebut. Sama seperti saat kita ngoding, kalo kamu menemukan error atau bug, dan kamu dapat menemukan solusi buat memecahkan error tersebut, pastinya ada perasaan lega dan puas yang kamu rasakan. Apalagi jika akhirnya project-mu sudah selesai.\n3. Punya Temen Programmer Di Bidang Yang Sama\nNegara kita punya banyak suku budaya bahasa, tapi kenapa bisa jadi satu negara? Karena ada rasa se-nasib se-penanggungan. Manusia itu mahluk sosial, kalau tiap ada masalah ditahan sendiri maka yang ada hanya menyakiti diri sendiri. Itulah pentingnya punya teman programmer di bidang yang sama. Karena berada di bidang yang sama,  siapa tau teman kamu punya solusinya ketika kamu menghadapi masalah. Kalaupun dia tidak punya solusinya, kalian bisa memecahkan masalah bersama-sama. Setidaknya jika dikerjakan bersama akan lebih asik dan ringan, dan solusi pun lebih dapat bisa didapatkan.\n4. Jangan SKS (Sistem Kebut Semalam)\nIni nih kebiasaan anak sekolah jaman sekarang yang perlu dihindari. Procrastinating atau menunda-nunda deadline itu kebiasaan manusia menjadi penyakit bagi diri sendiri. Sangat bertentangan dengan pribahasa “berakit-rakit dahulu, bersenang-senang kemudian”. Kalo kamu ngoding santai di awal, kemudian mendekati deadline baru tancap gas, apa yang akan terjadi ketika kamu ada kendala error atau bug? Pasti kamu jadi ga punya waktu buat menyelesaikan error atau bug di codingan kamu. Kerjakanlah kewajiban kamu dari awal, jadi kalau mumet kamu ada waktu untu bisa rehat sejenak atau tanya-tanya teman.\n5. Istirahat Sebentar Kalau Dah Mumet\nKalo kamu udah mumet, jangan terlalu dipaksakan. Terlalu lama di depan layar komputer atau laptop pasti bikin mata tegang, pusing, dan badan pegel-pegel. Kalau dipaksain yang ada bukannya codingan kamu selesai, malah kamu tepar. Kalau udah mulai mumet, coba kamu berdiri dari posisi kamu, bikin teh atau kopi, ngobrol dengan teman, dan lihat pemandangan. Ngoding memang asik, tapi kalo keasikan, bahaya juga buat tubuh kamu. Terlalu lama duduk juga berbahaya buat tulang belakang kamu.",
        "1. Pilih Materi & Tulis Di Atas Kertas\nKetika ingin memulai belajar bahasa pemrograman dengan menggunakan Teknik Feynman, kamu harus tulis dulu bahasa apa yang kamu pelajari. Tulis di atas kertas yang akan menjadi catatanmu, lalu tentukan poin-poin apa saja yang kamu ingin pelajari. Misalnya kamu ingin belajar Kotlin, nah kamu tuliskan materi Kotlin apa saja yang akan kamu pelajari. Anggap ini sebuah to do list di mana jika kamu berhasil memahami yang satu kamu akan dapat melanjutkan ke tahap selanjutnya.\n2. Tuliskan Materi Lalu Ajarkan Ke Orang Lain Dengan Sederhana\nKamu gak bakal mengerti kalau cuma meng-copy-paste kode program atau mendengarkan tutorial dari orang lain. Kamu harus mencatat juga materinya agar lebih paham misalkan dalam bentuk kode. Kamu bisa menuliskan contoh penulisan sintaks bahasa pemrograman yang kamu pelajari. Kemudian kamu bisa praktekkan dengan mencoba menerangkan apa yang sudah kamu pelajari ke orang lain. Heeeeh orang lain? Ya! Metode ini merupakan penjabaran dari quote terkenal ‘If you can’t explain it simply, you don’t understand it well’. Jika kamu tidak memiliki teman, saudara, atau kerabat untuk diajarkan, coba latihan sendiri di depan cermin.\n3. Cari Bagian Yang Sulit Kamu Jabarkan\nSetelah kamu mendengar dirimu menjelaskan, cari di mana penjelasan yang terlihat menjelimet atau susah kamu jabarkan. Ulangi lagi bagian tersebut dengan bahasa yang lebih mudah. Singkatnya coba jelaskan materi tersebut seperti mengajarkan ke anak sekolah dasar. Pelajari kembali bagian yang kamu rasa sulit kamu jelaskan, ulangi lagi menjelaskan tersebut sampai kamu merasa bagian itu sudah mudah untuk dimengerti orang awam.\n4. Ulangi Kembali Materi\n Dibandingkan dengan hanya melihat, mendengar, dan menghafal, akan lebih mudah mengingat apa yang kamu pelajari dengan mengajarkan apa yang sedang kamu pelajari ke orang lain. Maka jangan heran guru-guru sekolah atau dosen yang populer bukan lah dosen yang ahli dan pintar di bidangnya, tetapi dia yang dapat menjelaskan materi dengan cara mudah ke anak-anak didiknya. Seorang tenaga pendidik pasti akan mengulang-ulang terus materi yang dia bawakan karena akan semakin paham lah dia dengan materi yang dia ajarkan.",
        "1. Niat\nSesungguhnya setiap perbuatan berawal dari niat, dan kamu akan mendapatkan dengan apa yang kamu niatkan. Ada yang familiar dengan kata-kata tersebut? Niat itu memang merupakan awal dari segala tindakan dan tidak setiap orang yang memulai belajar ngoding mempunyai niat yang sama. Ada yang awalnya belajar coding karena suka dengan bermain logika, ada yang karena kagum dengan Bill Gates, Mark Zuckerberg dan tokoh IT lainnya, ada yang karena melihat kesempatan kerja menjadi programmer ke depan terlihat menjanjikan, pokoknya macam-macam lah. Apapun itu, kuatkan niat kamu, karena yang namanya manusia semangatnya kadang naik kadang turun. Nah ketika semangat kamu sedang turun kamu bisa ingat kembali niat kamu, hal apa yang bikin kamu akan tetap terus maju ketika kamu dilanda kesulitan dan kemalasan.\n2. Aksi\nKan ada yang bilang jodoh ga akan ke mana, tapi apa jodoh akan datang kalau kamu diem aja? Jika kamu suka seseorang, terus kamu diem ngeliatin ga ada perbuatan apa-apa atau seperti kata anak jaman sekarang “mencintai dalam diam”, kira-kira apa yang terjadi? Kalau kamu diem aja ya udah pasti orang yang kamu sukain ga bakalan ada respon apa-apa malah yang ada diambil orang lain. Sama kayak ngoding, kalau cuma suka niat doang tapi ga ada tindakan kamu buat belajar ya sama aja bo’ong. Kamu bisa bayangin ga, Steve Jobs tadinya orang biasa aja, bangun tidur tiba-tiba dapat wangsit langsung bisa sekejap nemuin Apple, ya ga mungkin lah cuy!! Jadi kamu harus pilih tuh kamu pingin bikin program apa. Cari buku atau ebooknya, pelajari lebih jauh. Dari situlah kamu akan tau kemana arah yang kamu tuju.\n3. Cari Resep & Masak Program\nAwalnya kamu harus nentuin dari program yang ingin kamu buat itu, kamu harus belajar bahasa pemprograman apa. Bahasa pemrograman? Ya benar, dunia pemrograman sama kayak dunia asli yang memiliki banyak bahasa. Maka dari itu kamu harus tentuin Bahasa Pemrograman apa yang bakalan kamu pake buat bikin program yang kamu pingin buat. Nah abis kamu pelajari bahan masakannya, resep pembuatannya, kuenya ga akan jadi begitu aja dong. Kamu masak deh tuh berdasarkan apa yang kamu pelajari tadi. Coba buat program-program sederhana. Kalau kamu ngerasa udah bisa bikin banyak program kecil-kecilan dan dasar kamu udah mantep, coba buat sendiri program tanpa nyontoh dengan tingkat kerumitan yang lebih dari yang pernah kamu kerjain.\n#4. Aktif Di Komunitas\nSeansos-ansosnya (anti sosial) kamu, kamu tetep butuh teman atau kelompok untuk membahas hal yang kamu senangin kan. Di Jepang aja ada kelompokan orang yang ga pernah keluar kamar (Hikikomori) tapi mereka tetep punya komunitas di hal yang mereka sukain karena komunitas itu penting buat menambah wawasan, ilmu, dan berbagi informasi. Coba aja misalkan kamu belajar bahasa pemrograman A, terus tiba-tiba ada update yang besar untuk bahasa tersebut. Kalau gak punya komunitas yang ada kamu pusing sendiri buat belajar dan ngikutin perkembangan teknologinya."
    )

    private val newsPhoto = intArrayOf(
        R.drawable.news1,
        R.drawable.news2,
        R.drawable.news3,
        R.drawable.news4,
        R.drawable.news5,
        R.drawable.news6,
        R.drawable.news7,
        R.drawable.news8,
        R.drawable.news9,
        R.drawable.news10
    )

    private val newsAuthorPhoto = intArrayOf(
        R.drawable.alfian_yusuf_abdullah,
        R.drawable.dimas_catur_wibowo,
        R.drawable.dicoding_intern,
        R.drawable.dicoding_intern,
        R.drawable.dicoding_intern,
        R.drawable.mutiara_arumsari,
        R.drawable.dicoding_intern,
        R.drawable.dicoding_intern,
        R.drawable.dicoding_intern,
        R.drawable.dicoding_intern
    )

    val listData: ArrayList<News>
        get() {
            val list = arrayListOf<News>()
            for (position in newsJudul.indices) {
                val news = News()
                news.judul = newsJudul[position]
                news.author = newsAuthor[position]
                news.des = newsDesc[position]
                news.photo = newsPhoto[position]
                news.authorPhoto = newsAuthorPhoto[position]
                list.add(news)
            }
            return list
        }
}
